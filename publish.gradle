publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            pom {
                group = 'dev.openfga.sdk'
                name = 'openfga-sdk'
                version = '0.0.1'
                description = 'This is an autogenerated Java SDK for OpenFGA. It provides a wrapper around the [OpenFGA API definition](https://openfga.dev/api).'
                url = 'https://openfga.dev'
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://github.com/openfga/java-sdk/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        name = 'OpenFGA'
                        url = 'https://openfga.dev'
                    }
                }
                scm {
                    url = 'https://github.com/openfga/java-sdk'
                    connection = 'scm:git:git@github.com:openfga/java-sdk.git'
                    developerConnection = 'scm:git:git@github.com:openfga/java-sdk.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = 'SonatypeOSSRH' // AKA: "Maven Central"
            url = 'https://s01.oss.sonatype.org/service/local/'
            credentials {
                username = System.getenv('MAVEN_USERNAME')
                password = System.getenv('MAVEN_PASSWORD')
            }
        }
//        // TODO: Uncomment once Maven Central publishing is verified working.
//        maven {
//            name = 'GitHubPackages'
//            url = 'https://maven.pkg.github.com/openfga/java-sdk'
//            credentials {
//                username = System.getenv('GITHUB_ACTOR')
//                password = System.getenv('GITHUB_TOKEN')
//            }
//        }
    }
}

signing {
    def signingKey = System.getenv('ORG_GRADLE_PROJECT_SIGNINGKEY')
    def signingPassword = System.getenv('ORG_GRADLE_PROJECT_SIGNINGPASSWORD')
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
}
