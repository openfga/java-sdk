plugins {
    id 'application'
    id 'com.diffplug.spotless' version '7.2.1'
}

application {
    mainClass = 'dev.openfga.sdk.example.opentelemetry.NoCodeOpenTelemetryExample'
}

// Task to download OpenTelemetry Java agent if not present
task downloadAgent {
    group = 'setup'
    description = 'Download OpenTelemetry Java agent if not present'
    
    doLast {
        def agentFile = file('opentelemetry-javaagent.jar')
        if (!agentFile.exists()) {
            println "Downloading OpenTelemetry Java agent..."
            def agentUrl = 'https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent.jar'
            new URL(agentUrl).withInputStream { i ->
                agentFile.withOutputStream { it << i }
            }
            println "Downloaded opentelemetry-javaagent.jar"
        } else {
            println "OpenTelemetry agent already exists"
        }
    }
}

// Task to run with OpenTelemetry agent using hard-coded configuration
task runWithAgent(type: JavaExec) {
    group = 'application'
    description = 'Run the no-code OpenTelemetry example with Java agent'
    dependsOn downloadAgent
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'dev.openfga.sdk.example.opentelemetry.NoCodeOpenTelemetryExample'
    
    // Add JVM arguments for OpenTelemetry agent with configuration
    jvmArgs = [
        '-javaagent:opentelemetry-javaagent.jar',
        '-Dotel.service.name=openfga-java-sdk-no-code-example',
        '-Dotel.service.version=1.0.0',
        '-Dotel.exporter.otlp.endpoint=http://localhost:4317',
        '-Dotel.exporter.otlp.protocol=grpc'
    ]
    
    doFirst {
        println "Running with OpenTelemetry Java agent..."
        println "Service Name: openfga-java-sdk-no-code-example"
        println "Service Version: 1.0.0"
        println "Exporter Endpoint: http://localhost:4317"
        println "Exporter Protocol: grpc"
        println ""
        println "Make sure you have an OTLP collector running on localhost:4317"
    }
}

repositories {
    mavenCentral()
}

ext {
    jacksonVersion = "2.19.2"
}

dependencies {
    // Use local SDK build instead of published version
    implementation("dev.openfga:openfga-sdk")

    // Serialization
    implementation("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")
    implementation("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion")
    implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion")
    implementation("org.openapitools:jackson-databind-nullable:0.2.6")

    // Environment variables
    implementation("io.github.cdimascio:dotenv-java:3.0.0")
}

// Use spotless plugin to automatically format code
spotless {
    enforceCheck false
    java {
        palantirJavaFormat()
        removeUnusedImports()
        importOrder()
    }
}
