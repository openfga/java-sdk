/*
 * OpenFGA
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 1.x
 * Contact: community@openfga.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package dev.openfga.sdk.util;

import static java.nio.charset.StandardCharsets.UTF_8;

import java.net.URLEncoder;
import java.util.function.Predicate;
import java.util.regex.Pattern;

/**
 * Operations on {@link String}.
 */
public class StringUtil {
    /**
     * The empty String {@code ""}.
     */
    public static final String EMPTY = "";

    /**
     * A predicate that matches when a string contains only whitespace characters.
     */
    private static final Predicate<String> NULL_OR_WHITESPACE =
            Pattern.compile("^\\s*$").asMatchPredicate();

    private StringUtil() {} // Instantiation prevented for utility class.

    /**
     * Returns {@code true} when the string is:
     * <ul>
     *     <li>{@code null}</li>
     *     <li>empty</li>
     *     <li>contains <b>only</b> whitespace characters</li>
     * </ul>
     * otherwise {@code false}.
     *
     * @param string the string being tested
     * @return true if string is {@code null}, empty or contains <b>only</b> whitespace(s)
     */
    public static boolean isNullOrWhitespace(String string) {
        return string == null || NULL_OR_WHITESPACE.test(string);
    }

    /**
     * URL encode a string in the UTF-8 encoding.
     *
     * @param string the string to encode
     * @return URL-encoded representation of the input string
     */
    public static String urlEncode(String string) {
        return URLEncoder.encode(string, UTF_8).replace("+", "%20");
    }
}
